#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

import time
import json
from datetime import datetime
from telegram_notifier import TelegramNotifier

def load_telegram_settings():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram"""
    try:
        with open('telegram_settings.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return None

def test_notification_speed():
    """–¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings = load_telegram_settings()
    if not settings:
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–∏—Ç–µ–ª—è
    notifier = TelegramNotifier()
    notifier.set_credentials(settings['token'], settings['chat_id'])
    
    if not notifier.initialize_bot():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞")
        return
    
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç—ã...")
    
    # –¢–µ—Å—Ç 1: –û–¥–∏–Ω–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    print("\nüì§ –¢–µ—Å—Ç 1: –û–¥–∏–Ω–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    start_time = time.time()
    
    success = notifier.send_message_instant("üöÄ –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ #1\n‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: " + 
                                          datetime.now().strftime('%H:%M:%S.%f')[:-3])
    
    if success:
        elapsed = (time.time() - start_time) * 1000
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å –∑–∞ {elapsed:.1f}–º—Å")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    
    # –¢–µ—Å—Ç 2: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\nüì§ –¢–µ—Å—Ç 2: –°–µ—Ä–∏—è –∏–∑ 5 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    start_time = time.time()
    
    for i in range(5):
        msg_time = time.time()
        success = notifier.send_message_instant(f"üöÄ –¢–µ—Å—Ç #{i+1}/5\n‚è±Ô∏è {datetime.now().strftime('%H:%M:%S.%f')[:-3]}")
        if success:
            elapsed = (time.time() - msg_time) * 1000
            print(f"  ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {i+1} –¥–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞ {elapsed:.1f}–º—Å")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è {i+1}")
    
    total_elapsed = (time.time() - start_time) * 1000
    print(f"üìä –û–±—â–µ–µ –≤—Ä–µ–º—è —Å–µ—Ä–∏–∏: {total_elapsed:.1f}–º—Å")
    
    # –¢–µ—Å—Ç 3: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    print("\nüì§ –¢–µ—Å—Ç 3: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏")
    start_time = time.time()
    
    buttons = [
        [
            {"text": "‚úÖ –ë—ã—Å—Ç—Ä–æ", "callback_data": "fast"},
            {"text": "‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ", "callback_data": "instant"}
        ]
    ]
    
    success = notifier.send_message_instant(
        "üöÄ –¢–µ—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏\n‚è±Ô∏è " + datetime.now().strftime('%H:%M:%S.%f')[:-3] + 
        "\n\nüìä –ö–∞–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏—à–ª–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ?", 
        buttons
    )
    
    if success:
        elapsed = (time.time() - start_time) * 1000
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞ {elapsed:.1f}–º—Å")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    time.sleep(2)  # –î–∞—Ç—å –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—á–µ—Ä–µ–¥—å
    stats = notifier.get_stats()
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
    print(f"  ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['sent']}")
    print(f"  ‚Ä¢ –û—à–∏–±–æ–∫: {stats['failed']}")
    print(f"  ‚Ä¢ –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {stats['queue_size']}")
    print(f"  ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {stats['avg_send_time']:.3f}—Å")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ")

if __name__ == "__main__":
    test_notification_speed()