#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
"""

import os
import sys
import json
import numpy as np
from collections import Counter

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def analyze_price_movements(data_file):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    if not os.path.exists(data_file):
        print(f"‚ùå –§–∞–π–ª {data_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {data_file}")
    
    try:
        with open(data_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    if 'tickers' in data:
        tickers = data['tickers']
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(tickers)} —Ç–∏–∫–µ—Ä–æ–≤")
        
        all_changes = []
        analyzed_count = 0
        
        for ticker in tickers:
            if analyzed_count >= 10:  # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
                break
                
            symbol = ticker.get('symbol', 'Unknown')
            price_change_percent = ticker.get('priceChangePercent', '0')
            
            try:
                change_percent = float(price_change_percent)
                abs_change = abs(change_percent / 100)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é –¥—Ä–æ–±—å
                all_changes.append(abs_change)
                
                print(f"üîç {symbol}: {change_percent}% ({abs_change:.6f})")
                analyzed_count += 1
                
            except (ValueError, TypeError):
                continue
        
        if all_changes:
            print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û {len(all_changes)} –ò–ó–ú–ï–ù–ï–ù–ò–Ø–ú")
            all_changes_array = np.array(all_changes)
            print(f"–ú–∞–∫—Å. –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {max(all_changes)*100:.4f}%")
            print(f"–°—Ä–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {np.mean(all_changes)*100:.4f}%")
            print(f"–ú–µ–¥–∏–∞–Ω–∞: {np.median(all_changes)*100:.4f}%")
            print(f"95-–π –ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª—å: {np.percentile(all_changes, 95)*100:.4f}%")
            print(f"99-–π –ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª—å: {np.percentile(all_changes, 99)*100:.4f}%")
            
            print(f"\nüéØ –ê–ù–ê–õ–ò–ó –ü–û–†–û–ì–û–í:")
            thresholds = [0.00001, 0.00005, 0.0001, 0.0005, 0.001, 0.005, 0.01, 0.02]
            for threshold in thresholds:
                above_threshold = sum(1 for c in all_changes if c > threshold)
                percentage = (above_threshold / len(all_changes)) * 100
                status = "‚úÖ –•–û–†–û–®–û" if 10 <= percentage <= 70 else "‚ö†Ô∏è –ü–†–û–í–ï–†–ò–¢–¨" if percentage > 0 else "‚ùå –°–õ–ò–®–ö–û–ú –í–´–°–û–ö–ò–ô"
                print(f"{threshold*100:.3f}%: {above_threshold}/{len(all_changes)} ({percentage:.1f}%) {status}")
        
    else:
        print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ò—â–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
    data_dir = os.path.expanduser("~/AppData/Local/BybitTradingBot/data")
    tickers_file = os.path.join(data_dir, "tickers_data.json")
    
    print("üîç –ê–Ω–∞–ª–∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    if os.path.exists(tickers_file):
        analyze_price_movements(tickers_file)
    elif os.path.exists("tickers_data_copy.json"):
        print(f"üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é: tickers_data_copy.json")
        analyze_price_movements("tickers_data_copy.json")
    else:
        print(f"‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {tickers_file}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        local_file = "tickers_data.json"
        if os.path.exists(local_file):
            print(f"üìÅ –ù–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª: {local_file}")
            analyze_price_movements(local_file)
        else:
            print("‚ùå –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    main()