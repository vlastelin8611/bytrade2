#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –±–∞–ª–∞–Ω—Å–æ–º
"""

import sys
import os
sys.path.append('src')

from api.bybit_client import BybitClient
from config import get_api_credentials

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print("=== –¢–µ—Å—Ç API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ===")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º API –∫–ª—é—á–∏
        credentials = get_api_credentials()
        api_key = credentials['api_key']
        api_secret = credentials['api_secret']
        testnet = credentials['testnet']
        print(f"‚úÖ API –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        print(f"API Key: {api_key[:10]}...")
        print(f"üîó –†–µ–∂–∏–º: {'Testnet' if testnet else 'Mainnet'}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = BybitClient(api_key, api_secret, testnet=testnet)
        print(f"‚úÖ API –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞
        print("\n=== –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞ ===")
        server_time = client._get_server_time_raw()
        print(f"–í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: {server_time}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞
        print("\n=== –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –±–∞–ª–∞–Ω—Å–∞ ===")
        raw_balance = client._make_request('GET', '/v5/account/wallet-balance', {'accountType': 'UNIFIED'})
        print(f"–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç API:")
        print(f"  –¢–∏–ø: {type(raw_balance)}")
        print(f"  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {raw_balance}")
        
        if raw_balance and isinstance(raw_balance, dict):
            print(f"\n=== –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞ ===")
            print(f"–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {raw_balance.get('retCode', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {raw_balance.get('retMsg', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
            
            if 'result' in raw_balance:
                result = raw_balance['result']
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                
                if 'list' in result:
                    accounts = result['list']
                    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
                    
                    if accounts:
                        acc = accounts[0]
                        print(f"–ü–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç:")
                        print(f"  –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {acc.get('totalWalletBalance', '0')} USD")
                        print(f"  –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: {acc.get('totalAvailableBalance', '0')} USD")
                        
                        coins = acc.get('coin', [])
                        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç: {len(coins)}")
                        
                        for i, coin in enumerate(coins[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –º–æ–Ω–µ—Ç
                            coin_name = coin.get('coin', '?')
                            wallet_balance = coin.get('walletBalance', '0')
                            usd_value = coin.get('usdValue', '0')
                            print(f"    {i+1}. {coin_name}: {wallet_balance} (${usd_value})")
                    else:
                        print("  –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø—É—Å—Ç")
                else:
                    print("  –ù–µ—Ç –ø–æ–ª—è 'list' –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
            else:
                print("  –ù–µ—Ç –ø–æ–ª—è 'result' –≤ –æ—Ç–≤–µ—Ç–µ")
        else:
            print("‚ùå –ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç API")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ get_unified_balance_flat
        print("\n=== –¢–µ—Å—Ç get_unified_balance_flat ===")
        flat_balance = client.get_unified_balance_flat()
        print(f"–ü–ª–æ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: {flat_balance}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_api_connection()