import os
import sys
from datetime import datetime
from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, 
    QTableWidget, QTableWidgetItem, QComboBox, QLineEdit,
    QFormLayout, QGroupBox, QCheckBox, QSpinBox, QDoubleSpinBox,
    QTabWidget, QScrollArea, QSizePolicy, QMessageBox
)
from PySide6.QtCore import Qt, Signal, Slot
from PySide6.QtGui import QFont, QColor

class StrategiesTab(QWidget):
    """–ö–ª–∞—Å—Å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
    
    def __init__(self, config=None, db_manager=None, api_client=None, strategy_engine=None):
        super().__init__()
        self.config = config
        self.db_manager = db_manager
        self.api_client = api_client
        self.strategy_engine = strategy_engine
        self.is_trading_active = False
        
        self.init_ui()
        
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        main_layout = QVBoxLayout(self)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        header_layout = QHBoxLayout()
        title_label = QLabel("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏")
        title_label.setFont(QFont("Arial", 12, QFont.Bold))
        
        # –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
        self.activate_trading_btn = QPushButton("–í–∫–ª—é—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é")
        self.activate_trading_btn.setMinimumSize(180, 30)
        self.activate_trading_btn.setStyleSheet("background-color: #3498db; color: white;")
        self.activate_trading_btn.clicked.connect(self.toggle_trading)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
        refresh_btn = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
        refresh_btn.setMinimumSize(180, 30)
        refresh_btn.clicked.connect(self.refresh_strategies)
        
        header_layout.addWidget(title_label)
        header_layout.addStretch()
        header_layout.addWidget(self.activate_trading_btn)
        header_layout.addWidget(refresh_btn)
        
        main_layout.addLayout(header_layout)
        
        # –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
        strategies_group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π")
        strategies_layout = QVBoxLayout(strategies_group)
        
        # –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        strategy_form = QFormLayout()
        self.strategy_combo = QComboBox()
        self.strategy_combo.addItems(["–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è ML", "–°–∫–∞–ª—å–ø–∏–Ω–≥", "–¢—Ä–µ–Ω–¥–æ–≤–∞—è"])
        strategy_form.addRow("–°—Ç—Ä–∞—Ç–µ–≥–∏—è:", self.strategy_combo)
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        self.risk_level = QComboBox()
        self.risk_level.addItems(["–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π"])
        strategy_form.addRow("–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:", self.risk_level)
        
        self.trade_amount = QDoubleSpinBox()
        self.trade_amount.setRange(10, 1000)
        self.trade_amount.setValue(100)
        self.trade_amount.setSingleStep(10)
        strategy_form.addRow("–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ (USDT):", self.trade_amount)
        
        strategies_layout.addLayout(strategy_form)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        main_layout.addWidget(strategies_group)
        
        # –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        status_layout = QHBoxLayout()
        self.status_label = QLabel("–°—Ç–∞—Ç—É—Å: –ù–µ–∞–∫—Ç–∏–≤–Ω–∞")
        self.status_label.setStyleSheet("color: gray; font-weight: bold;")
        status_layout.addWidget(self.status_label)
        
        main_layout.addLayout(status_layout)
        main_layout.addStretch()
    
    def toggle_trading(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏"""
        try:
            if not self.is_trading_active:
                # –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏
                self.activate_trading()
            else:
                # –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏
                self.deactivate_trading()
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏: {str(e)}")
    
    def activate_trading(self):
        """–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª–∏–µ–Ω—Ç–∞
            if not self.api_client:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "API –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–≤–∏–∂–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            if not self.strategy_engine:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–î–≤–∏–∂–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                return
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
            strategy_name = self.strategy_combo.currentText()
            risk_level = self.risk_level.currentText()
            trade_amount = self.trade_amount.value()
            
            # –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤ –¥–≤–∏–∂–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            success = self.strategy_engine.activate_strategy(
                strategy_name=strategy_name,
                risk_level=risk_level,
                trade_amount=trade_amount
            )
            
            if success:
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
                self.is_trading_active = True
                self.activate_trading_btn.setText("–û—Ç–∫–ª—é—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é")
                self.activate_trading_btn.setStyleSheet("background-color: #e74c3c; color: white;")
                self.status_label.setText("–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∞")
                self.status_label.setStyleSheet("color: green; font-weight: bold;")
                
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", f"–°—Ç—Ä–∞—Ç–µ–≥–∏—è {strategy_name} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é")
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {str(e)}")
    
    def deactivate_trading(self):
        """–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–≤–∏–∂–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            if not self.strategy_engine:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–î–≤–∏–∂–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                return
            
            # –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤ –¥–≤–∏–∂–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            success = self.strategy_engine.deactivate_strategy()
            
            if success:
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
                self.is_trading_active = False
                self.activate_trading_btn.setText("–í–∫–ª—é—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é")
                self.activate_trading_btn.setStyleSheet("background-color: #3498db; color: white;")
                self.status_label.setText("–°—Ç–∞—Ç—É—Å: –ù–µ–∞–∫—Ç–∏–≤–Ω–∞")
                self.status_label.setStyleSheet("color: gray; font-weight: bold;")
                
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°—Ç—Ä–∞—Ç–µ–≥–∏—è —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é")
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {str(e)}")
    
    def refresh_strategies(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
        try:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
            QMessageBox.information(self, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {str(e)}")