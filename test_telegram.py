#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç Telegram –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
"""

import json
import asyncio
import sys
from pathlib import Path

try:
    from telegram import Bot
    from telegram.error import TelegramError
    TELEGRAM_AVAILABLE = True
except ImportError:
    print("‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-telegram-bot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-telegram-bot")
    sys.exit(1)

def load_telegram_settings():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram"""
    settings_file = Path(__file__).parent / 'telegram_settings.json'
    
    if not settings_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: {settings_file}")
        return None
    
    try:
        with open(settings_file, 'r', encoding='utf-8') as f:
            settings = json.load(f)
        
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {settings_file}")
        print(f"   Token: {settings.get('token', '–ù–ï –ù–ê–ô–î–ï–ù')[:20]}...")
        print(f"   Chat ID: {settings.get('chat_id', '–ù–ï –ù–ê–ô–î–ï–ù')}")
        print(f"   Enabled: {settings.get('enabled', False)}")
        
        return settings
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return None

async def test_telegram_bot():
    """–¢–µ—Å—Ç Telegram –±–æ—Ç–∞"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç Telegram –±–æ—Ç–∞...")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings = load_telegram_settings()
    if not settings:
        return False
    
    if not settings.get('enabled', False):
        print("‚ùå Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return False
    
    token = settings.get('token')
    chat_id = settings.get('chat_id')
    
    if not token or not chat_id:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id")
        return False
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
        bot = Bot(token=token)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
        print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot_info.username} ({bot_info.first_name})")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        test_message = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞\n\n" \
                      "–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! ‚úÖ"
        
        message = await bot.send_message(
            chat_id=chat_id,
            text=test_message,
            parse_mode='HTML'
        )
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! Message ID: {message.message_id}")
        
        # –¢–µ—Å—Ç —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
        print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline –∫–Ω–æ–ø–∫–∞–º–∏...")
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        keyboard = [
            [InlineKeyboardButton("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª", callback_data="test_success")],
            [InlineKeyboardButton("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã", callback_data="test_failed")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        button_message = await bot.send_message(
            chat_id=chat_id,
            text="üéõÔ∏è –¢–µ—Å—Ç inline –∫–Ω–æ–ø–æ–∫:\n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏",
            reply_markup=reply_markup
        )
        
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! Message ID: {button_message.message_id}")
        
        return True
        
    except TelegramError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {e}")
        if "Unauthorized" in str(e):
            print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
            print("   - –ë–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        elif "Bad Request" in str(e):
            print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–≤–µ—Ä–Ω—ã–π chat_id")
            print("   - –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("ü§ñ –¢–ï–°–¢ TELEGRAM –ë–û–¢–ê")
    print("=" * 50)
    
    success = await test_telegram_bot()
    
    print("=" * 50)
    if success:
        print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print("Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")
    print("=" * 50)

if __name__ == "__main__":
    asyncio.run(main())